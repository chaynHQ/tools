name: Policy Validation Workflow

on:
  push:
    branches: [validation-flow, validation-flow-refactors]
  schedule:
    # Run every Monday at 9:00 AM UTC (weekly)
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to validate (optional - validates all if not specified)'
        required: false
        type: choice
        options:
          - ''
          - facebook
          - instagram
          - tiktok
          - onlyfans
          - pornhub

jobs:
  validate-policies:
    name: Validate Platform Policies
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        platform: ${{ github.event.inputs.platform && fromJson(format('["{0}"]', github.event.inputs.platform)) || fromJson('["facebook", "instagram", "tiktok", "onlyfans", "pornhub"]') }}
      fail-fast: false

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      ANTHROPIC_MODEL: ${{ secrets.ANTHROPIC_MODEL }}
      ANTHROPIC_TEMPERATURE: ${{ secrets.ANTHROPIC_TEMPERATURE }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GAFFA_API_KEY: ${{ secrets.GAFFA_API_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate environment variables
        run: |
          if [ -z "$ANTHROPIC_API_KEY" ]; then
            echo "Error: ANTHROPIC_API_KEY is not set"
            exit 1
          fi
          if [ ${#ANTHROPIC_API_KEY} -lt 10 ]; then
            echo "Error: ANTHROPIC_API_KEY appears to be too short"
            exit 1
          fi
          if [[ ! "$ANTHROPIC_API_KEY" =~ ^sk-ant- ]]; then
            echo "Warning: ANTHROPIC_API_KEY does not appear to have the correct format"
          fi

          if [ -z "$SLACK_WEBHOOK_URL" ]; then
            echo "Warning: SLACK_WEBHOOK_URL is not set - notifications may not work"
          fi

          if [ -z "$GITHUB_TOKEN" ]; then
            echo "Warning: GITHUB_TOKEN is not set - PR creation may not work"
          fi

          echo "Environment validation completed successfully"

      - name: Validate platform policies
        id: validate_platform
        run: |
          node scripts/policy-validation.js ${{ matrix.platform }}

      - name: Send completion notification
        if: always()
        run: |
          PLATFORM="${{ steps.validate_platform.outputs.platform }}"
          PLATFORM_NAME="${{ steps.validate_platform.outputs.platform_name }}"
          STATUS="${{ steps.validate_platform.outputs.status }}"
          REASONING="${{ steps.validate_platform.outputs.reasoning }}"
          PR_URL="${{ steps.validate_platform.outputs.pr_url }}"
          PR_NUMBER="${{ steps.validate_platform.outputs.pr_number }}"
          STATUS="${{ job.status }}"

          if [ "$STATUS" = "success" ]; then
            VALIDATION_STATUS="${{ steps.validate_platform.outputs.status }}"
            if [ "$VALIDATION_STATUS" = "completed_with_pr_created" ]; then
              MESSAGE="üéâ Policy validation completed successfully for $PLATFORM_NAME! Quality check: PASSED. Pull Request created: $PR_URL (PR #$PR_NUMBER). Ready for review and merge."
            elif [ "$VALIDATION_STATUS" = "completed_with_pr_error" ]; then
              MESSAGE="‚ö†Ô∏è Policy validation completed for $PLATFORM_NAME, but PR creation failed. Quality check: PASSED. Manual PR creation required. Reasoning: $REASONING"
            elif [ "$VALIDATION_STATUS" = "completed_with_valid_changes" ]; then
              MESSAGE="‚úÖ Policy validation completed for $PLATFORM_NAME with valid changes found. Quality check: PASSED. Ready for PR creation. Reasoning: $REASONING"
            elif [ "$VALIDATION_STATUS" = "completed_with_invalid_changes" ]; then
              MESSAGE="‚ö†Ô∏è Policy validation completed for $PLATFORM_NAME with issues. Quality check FAILED. Manual review required. Reasoning: $REASONING"
            elif [ "$VALIDATION_STATUS" = "completed_no_changes" ]; then
              MESSAGE="‚úÖ Policy validation completed for $PLATFORM_NAME with no changes needed. All policies are up to date."
            else
              MESSAGE="‚úÖ Policy validation completed for $PLATFORM_NAME. Status: $VALIDATION_STATUS"
            fi
          else
            MESSAGE="‚ùå Policy validation failed for $PLATFORM_NAME"
          fi

          echo "Sending notification: $MESSAGE"

          # Send Slack notification
          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$MESSAGE\"}" \
            "$SLACK_WEBHOOK_URL" || echo "Failed to send Slack notification"
